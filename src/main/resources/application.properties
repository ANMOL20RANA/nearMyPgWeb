spring.application.name=NearPg

spring.security.debug=true
logging.level.org.springframework.security=DEBUG


# spring.datasource.url=jdbc:mysql://localhost:3306/near_pg_db
# spring.datasource.username=nearpg
# spring.datasource.password=nearpg
# spring.jpa.hibernate.ddl-auto=create-drop

# spring.security.oauth2.client.registration.github.client-id=Ov23liknAMZz2jJp7IeB
# spring.security.oauth2.client.registration.github.client-secret=2a912a0890e6d8424ca34bbe8121dc106eaf3e17

spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google


# # logging.level.org.springframework.security.oauth2.client=DEBUG

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=update


# SMTP Configuration for sending email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
# spring.mail.properties.mail.smtp.connectiontimeout=5000
# spring.mail.properties.mail.smtp.timeout=5000
# spring.mail.properties.mail.smtp.writetimeout=5000



otp.expiration.time =1000

# spring.main.banner-mode=off
# logging.level.root=warn
# logging.level.org.springframework.boot=warn
# logging.level.org.hibernate=warn



// oauth setup
# OAuth2 Client Configuration
# spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
# spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=profile,email
# spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=Google

# OAuth2 Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

